{"version":3,"sources":["logo.svg","components/champCard/index.js","components/playedChampCard/index.js","components/pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["ChampCard","props","useState","pickChamp","setPickChamp","motion","div","whileHover","scale","onClick","e","id","target","playedChampions","JSON","parse","localStorage","getItem","push","setItem","stringify","console","log","filter","item","Stack","margin","Box","src","height","sx","width","zIndex","bgcolor","marginTop","marginBottom","style","fontSize","marginLeft","color","fontFamily","PlayedChampCard","champions","Home","term","setTerm","championFilter","champion","toLowerCase","startsWith","playedChampionFilter","showPlayedChamps","setShowPlayedChamps","showUnplayedChamps","setShowUnplayedChamps","playedButton","setPlayedButton","unplayedButton","setUnplayedButton","showRandomChamp","setShowRandomChamp","count","setCount","randomNum","Math","floor","random","length","minWidth","position","top","backgroundColor","boxShadow","Grid","container","justifyContent","spacing","marginRight","Button","size","window","location","reload","variant","xs","Paper","component","p","display","alignItems","InputBase","ml","flex","placeholder","inputProps","onChange","event","value","flexWrap","map","champ","maxWidth","alignContent","initializeLocalStorage","includes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5747a10b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Stack } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\nexport default function ChampCard(props) {\r\n\r\n    \r\n    const [border, setBorder] = useState(0)\r\n    const [pickChamp, setPickChamp] = useState(false)\r\n\r\n\r\n    function handleClick(e) {\r\n        const id = e.target.id;\r\n        let playedChampions = JSON.parse(localStorage.getItem(\"played champ\"));\r\n        if (pickChamp === false){\r\n            playedChampions.push(id)\r\n            localStorage.setItem('played champ', JSON.stringify(playedChampions));\r\n            setPickChamp(true)\r\n            console.log(\"you clicked me\")\r\n        } else if (pickChamp === true){\r\n            let playedChampions = JSON.parse(localStorage.getItem(\"played champ\"));\r\n            playedChampions = playedChampions.filter(item => id !== (item))\r\n            localStorage.setItem('played champ', JSON.stringify(playedChampions));\r\n            setPickChamp(false)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            whileHover={{ scale: 1.1 }}\r\n            onClick={handleClick} id={props.props}\r\n         \r\n        >\r\n            <Stack margin=\"10px\">\r\n                \r\n                <Box>\r\n                    <img id={props.props} src={`http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${props.props}_0.jpg`} height=\"225px\" />\r\n                </Box>\r\n                <Box sx={{\r\n                    width: \"124px\",\r\n                    height: \"53px\",\r\n                    zIndex: 1,\r\n                    bgcolor: 'rgba(0, 0, 0, 0.5)',\r\n                    marginTop: -60,\r\n                }}>\r\n                    <Box sx={{\r\n                        marginBottom: 5,\r\n                    }}>\r\n                        <h1 style={{ fontSize: \"22px\", marginTop: \"5px\", marginLeft: \"10px\", color: \"white\", fontFamily: \"Friz Quadrata\" }}>{props.props}</h1>\r\n\r\n                    </Box>\r\n                </Box>\r\n                {pickChamp ?\r\n                  \r\n                    <Box sx={{\r\n                        width: \"124px\",\r\n                        height: \"224px\",\r\n                        zIndex: 1,\r\n                        bgcolor: 'rgba(0, 0, 0, 0.8)',\r\n                        marginTop: -220,\r\n                        marginBottom: -5\r\n                        \r\n                    }}\r\n                    id={props.props}/>\r\n                : null}\r\n            </Stack>\r\n        </motion.div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Stack } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\nexport default function PlayedChampCard(props) {\r\n\r\n    \r\n    const [border, setBorder] = useState(0)\r\n    const [pickChamp, setPickChamp] = useState(true)\r\n\r\n\r\n    function handleClick(e) {\r\n        const id = e.target.id;\r\n        let playedChampions = JSON.parse(localStorage.getItem(\"played champ\"));\r\n        if (pickChamp === false){\r\n            playedChampions.push(id)\r\n            localStorage.setItem('played champ', JSON.stringify(playedChampions));\r\n            setPickChamp(true)\r\n            console.log(\"you clicked me\")\r\n        } else if (pickChamp === true){\r\n            let playedChampions = JSON.parse(localStorage.getItem(\"played champ\"));\r\n            playedChampions = playedChampions.filter(item => id !== (item))\r\n            localStorage.setItem('played champ', JSON.stringify(playedChampions));\r\n            setPickChamp(false)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            whileHover={{ scale: 1.1 }}\r\n            onClick={handleClick} id={props.props}\r\n         \r\n        >\r\n            <Stack margin=\"10px\">\r\n                \r\n                <Box>\r\n                    <img id={props.props} src={`http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${props.props}_0.jpg`} height=\"225px\" />\r\n                </Box>\r\n                <Box sx={{\r\n                    width: \"124px\",\r\n                    height: \"53px\",\r\n                    zIndex: 1,\r\n                    bgcolor: 'rgba(0, 0, 0, 0.5)',\r\n                    marginTop: -60,\r\n                }}>\r\n                    <Box sx={{\r\n                        marginBottom: 5,\r\n                    }}>\r\n                        <h1 style={{ fontSize: \"22px\", marginTop: \"5px\", marginLeft: \"10px\", color: \"white\", fontFamily: \"Friz Quadrata\" }}>{props.props}</h1>\r\n\r\n                    </Box>\r\n                </Box>\r\n                {pickChamp ?  \r\n                    <Box sx={{\r\n                        width: \"124px\",\r\n                        height: \"222px\",\r\n                        zIndex: 1,\r\n                        bgcolor: 'rgba(0, 0, 0, 0.8)',\r\n                        marginTop: -220,\r\n                        marginBottom: 0\r\n                        \r\n                    }}\r\n                    id={props.props}/>\r\n                : null}\r\n            </Stack>\r\n        </motion.div>\r\n\r\n\r\n    )\r\n\r\n}","import { React, useState } from \"react\";\r\nimport ChampCard from \"../champCard\";\r\nimport Box from '@material-ui/core/Box';\r\nimport { Grid } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport PlayedChampCard from \"../playedChampCard\";\r\nimport { Paper, InputBase, Divider } from \"@mui/material\";\r\nimport MediaQuery from 'react-responsive'\r\n\r\nvar champions = ['Aatrox', 'Ahri', 'Akali', 'Akshan', 'Alistar', 'Amumu', 'Anivia', 'Annie', 'Aphelios', 'Ashe', 'AurelionSol', 'Azir', 'Bard', 'Blitzcrank', 'Brand', 'Braum', 'Caitlyn', 'Camille', 'Cassiopeia', 'Chogath', 'Corki', 'Darius', 'Diana', 'DrMundo', 'Draven', 'Ekko', 'Elise', 'Evelynn', 'Ezreal', 'Fiddlesticks', 'Fiora', 'Fizz', 'Galio', 'Gangplank', 'Garen', 'Gnar', 'Gragas', 'Graves', 'Gwen', 'Hecarim', 'Heimerdinger', 'Illaoi', 'Irelia', 'Ivern', 'Janna', 'JarvanIV', 'Jax', 'Jayce', 'Jhin', 'Jinx', 'Kaisa', 'Kalista', 'Karma', 'Karthus', 'Kassadin', 'Katarina', 'Kayle', 'Kayn', 'Kennen', 'Khazix', 'Kindred', 'Kled', 'KogMaw', 'Leblanc', 'LeeSin', 'Leona', 'Lillia', 'Lissandra', 'Lucian', 'Lulu', 'Lux', 'Malphite', 'Malzahar', 'Maokai', 'MasterYi', 'MissFortune', 'Mordekaiser', 'Morgana', 'Nami', 'Nasus', 'Nautilus', 'Neeko', 'Nidalee', 'Nocturne', 'Nunu', 'Olaf', 'Orianna', 'Ornn', 'Pantheon', 'Poppy', 'Pyke', 'Qiyana', 'Quinn', 'Rakan', 'Rammus', 'RekSai', 'Rell', 'Renekton', 'Rengar', 'Riven', 'Rumble', 'Ryze', 'Samira', 'Sejuani', 'Senna', 'Seraphine', 'Sett', 'Shaco', 'Shen', 'Shyvana', 'Singed', 'Sion', 'Sivir', 'Skarner', 'Sona', 'Soraka', 'Swain', 'Sylas', 'Syndra', 'TahmKench', 'Taliyah', 'Talon', 'Taric', 'Teemo', 'Thresh', 'Tristana', 'Trundle', 'Tryndamere', 'TwistedFate', 'Twitch', 'Udyr', 'Urgot', 'Varus', 'Vayne', 'Veigar', 'Velkoz', 'Vi', 'Viego', 'Viktor', 'Vladimir', 'Volibear', 'Warwick', 'MonkeyKing', 'Xayah', 'Xerath', 'XinZhao', 'Yasuo', 'Yone', 'Yorick', 'Yuumi', 'Zac', 'Zed', 'Ziggs', 'Zilean', 'Zoe', 'Zyra', 'Vex']\r\nvar playedChampions = JSON.parse(localStorage.getItem(\"played champ\"));\r\n// var initializedLocalStorage = [];\r\n// localStorage.setItem('played champ', JSON.stringify(in));\r\nconsole.log(playedChampions)\r\ninitializeLocalStorage();\r\ndetermineChampionsLeft();\r\n\r\n\r\nfunction determineChampionsLeft() {\r\n\r\n    champions = champions.filter(item => !playedChampions.includes(item))\r\n    console.log(champions)\r\n}\r\n\r\nfunction initializeLocalStorage() {\r\n    if ( JSON.parse(localStorage.getItem(\"played champ\")) === null ){\r\n        console.log(\"there are champions\")\r\n        let initializeChamps = [];\r\n        localStorage.setItem('played champ', JSON.stringify(initializeChamps));\r\n        window.location.reload(false);\r\n    } \r\n}\r\n\r\n\r\nexport default function Home() {\r\n\r\n    const [term, setTerm] = useState(\"\");\r\n    const handleInputChange = event => {\r\n        setTerm(event.target.value)\r\n    }\r\n    const championFilter = champions.filter(champion =>\r\n        champion.toLowerCase().startsWith(term.toLowerCase()))\r\n\r\n    const playedChampionFilter = playedChampions.filter(playedChampions =>\r\n        playedChampions.toLowerCase().startsWith(term.toLowerCase()))\r\n\r\n    const [showPlayedChamps, setShowPlayedChamps] = useState(false)\r\n    const [showUnplayedChamps, setShowUnplayedChamps] = useState(true)\r\n    const [playedButton, setPlayedButton] = useState(true)\r\n    const [unplayedButton, setUnplayedButton] = useState(false)\r\n\r\n    const [showRandomChamp, setShowRandomChamp] = useState(false);\r\n    const [count, setCount] = useState(0);\r\n\r\n    let randomNum = Math.floor(Math.random() * champions.length);\r\n\r\n    function handleRandomChamp() {\r\n        setShowRandomChamp(false);\r\n        randomNum = Math.floor(Math.random() * champions.length);\r\n        // randomChampImage = <img src={`http://ddragon.leagueoflegends.com/cdn/11.19.1/img/champion/${champions[randomNum]}.png`} />\r\n        setShowRandomChamp(true);\r\n        setCount(champions[randomNum])\r\n        console.log(champions[randomNum])\r\n\r\n    }\r\n\r\n    function handleLockIn() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n    function handleShowPlayedChamps() {\r\n\r\n        setShowUnplayedChamps(false)\r\n        setShowPlayedChamps(true)\r\n        setPlayedButton(false)\r\n        setUnplayedButton(true)\r\n    }\r\n\r\n    function handleShowUnplayedChamps() {\r\n\r\n        setShowUnplayedChamps(true)\r\n        setShowPlayedChamps(false)\r\n        setPlayedButton(true)\r\n        setUnplayedButton(false)\r\n    }\r\n\r\n    function handleChampReset() {\r\n        playedChampions = [];\r\n        localStorage.setItem('played champ', JSON.stringify(playedChampions));\r\n        window.location.reload(false);\r\n    }\r\n    return (\r\n        <Box>\r\n            <MediaQuery minWidth={1920}>\r\n                <Box>\r\n                    <Box style={{ position: \"fixed\", top: 0, width: \"100%\", height: \"145px\", backgroundColor: \"#121c40\", zIndex: 10, boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.9), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\" }} boxShadow=\"initial\">\r\n                        <Grid container justifyContent=\"center\" spacing={0}>\r\n                            <Grid marginTop=\"45px\" marginLeft=\"-100px\" marginRight=\"20px\">\r\n                                <Button size=\"large\" onClick={handleLockIn} variant=\"contained\"><span style={{ fontFamily: \"Friz Quadrata\" }}>Lock In </span></Button>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={0} marginTop=\"45px\" marginRight=\"100px\">\r\n                                <Button size=\"large\" onClick={handleRandomChamp} variant=\"contained\"><span style={{ fontFamily: \"Friz Quadrata\" }}>Random</span></Button>\r\n                            </Grid>\r\n                            <Grid marginTop=\"5px\" width=\"90px\" height=\"90px\" marginLeft=\"-50px\" marginRight=\"53px\">\r\n\r\n                                <Box width=\"90px\" height=\"90px\" marginLeft=\"50px\" marginRight=\"50px\">\r\n                                    {showRandomChamp ? <img height=\"90px\" src={`http://ddragon.leagueoflegends.com/cdn/11.19.1/img/champion/${count}.png`} /> : null}\r\n                                </Box>\r\n\r\n                                <Box margin=\"10px\">\r\n                                    <Paper\r\n                                        component=\"form\"\r\n                                        sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 165, }}\r\n                                    >\r\n                                        <InputBase\r\n                                            sx={{ ml: 1, flex: 1 }}\r\n                                            placeholder=\"Search Champions\"\r\n                                            inputProps={{ 'aria-label': 'search google maps' }}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n\r\n                                    </Paper>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid marginTop=\"45px\" marginLeft=\"100px\">\r\n                                <Button size=\"large\" onClick={handleChampReset} variant=\"contained\"><span style={{ fontFamily: \"Friz Quadrata\" }}>Reset</span></Button>\r\n                            </Grid>\r\n                            {playedButton ?\r\n                                <Grid marginTop=\"45px\" marginLeft=\"20px\" marginRight=\"-100px\">\r\n                                    <Button size=\"large\" onClick={handleShowPlayedChamps} variant=\"contained\" ><span style={{ fontFamily: \"Friz Quadrata\", marginRight: \"12px\", marginLeft: \"12px\" }}>Played</span></Button>\r\n                                </Grid>\r\n                                : null}\r\n                            {unplayedButton ?\r\n                                <Grid marginTop=\"45px\" marginLeft=\"20px\" marginRight=\"-100px\">\r\n                                    <Button size=\"large\" onClick={handleShowUnplayedChamps} variant=\"contained\"><span style={{ fontFamily: \"Friz Quadrata\" }}>Unplayed</span></Button>\r\n                                </Grid>\r\n                                : null}\r\n                        </Grid>\r\n\r\n\r\n                    </Box>\r\n                    {showUnplayedChamps ?\r\n                        <Grid display=\"flex\" flexWrap=\"wrap\" marginLeft=\"25px\" marginTop=\"150px\">\r\n                            {championFilter.map(champ => <ChampCard props={champ} />)}\r\n                        </Grid>\r\n                        : null}\r\n\r\n                    {showPlayedChamps ?\r\n                        <Grid display=\"flex\" flexWrap=\"wrap\" marginLeft=\"25px\" marginTop=\"150px\">\r\n                            {playedChampionFilter.map(champ => <PlayedChampCard props={champ} />)}\r\n                        </Grid>\r\n                        : null}\r\n                </Box>\r\n            </MediaQuery>\r\n            <MediaQuery maxWidth={1919}>\r\n                <Box justifyContent=\"center\" alignContent=\"center\">\r\n                    <h1>Mobile coming soon!</h1>\r\n                </Box>\r\n            </MediaQuery>\r\n        </Box>\r\n    )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Home from \"./components/pages/Home\"\n\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}